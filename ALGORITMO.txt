//Para generar el vector k

char C[alto][ancho];
vector<vector<int>> k[alto][ancho];
k.clear();
for (size_t i=0; i<alto; i++){
  for (size_t j=0; j<ancho; j++){
    if(C[i][j]=='1'){
      k[i][j]=2000000000;
    } else if(C[i][j]=='F'){
      k[i][j]==1;
    }else{
      k[i][j]==0;
    }
}

//FIN DE GENERAR VECTOR K








//PINTAR MAPAAAAAA

int alto=20;
int ancho=20;
vector<vector<char>> C[alto][ancho];
vector<vector<int>> k[alto][ancho];

while (true){
    bool font= false;
    size_t iMin;
    size_t jMin;
    int VMin=2000000000000;
    for (size_t i=0; i<alto; i++){
        for (size_t j=0; j<ancho; j++){
            if(k[i][j]!=0&&k[i][j]<VMin&&(k[i][j-1]||(k[i][j+1]||(k[i-1][j]||(k[i+1][j]){
                VMin=k[i][j];
                iMin=i;
                jMin=j;
                font=true;
            }
        }
    }
    if(font==false){
        break;
    }
    if(j-1<ancho && k[i][j-1]==0){
        k[i][j]=VMin+1;
    }
    if(j+1<ancho && k[i][j+1]==0){
        k[i][j]=VMin+1;
    }
    if(i-1<alto && k[i-1][j]==0){
        k[i][j]=VMin+1;
    }
    if(i+1<alto && k[i+1][j]==0){
        k[i][j]=VMin+1;
    }
}

//FIN DE PINTAR MAPAAA 



//HALLAR EL MEJOR CAMINO
/////////////////////////////////////////////////////////////////////////////////////////
//CLASE COORDENADA
class Coordenada{
  private:
  TipoEntero x;
  TipoEntero y;
  public:
  Coordenada();
  ~Coordenada();
  TipoEntero getx();
  TipoEntero gety();
};

//PUNTO CPP

Coordenada::Coordenada(){}
Coordenada::~Coordenada(){
TipoEntero Coordenada::getx(){
  return x;
}
TipoEntero Coordenada::gety(){
  return y;
}

/////////////////////////////////////////////////////////////////////////////////////////
//Dentro de la clase algoritmo:
vector<Coordenada> Camino
void DibujarCamino();



//PUNTO CPP DE ALGORITMO
void Algoritmo::DibujarCamino(){
  x=getx
}







